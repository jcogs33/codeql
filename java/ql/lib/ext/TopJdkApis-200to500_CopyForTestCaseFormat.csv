message,_col1
// top 200
"java.lang.Integer#intValue()",
"java.util.ArrayList#size()",
"java.util.ArrayList#ArrayList(int)",
"java.util.function.Function#apply(Object)",
"java.util.stream.Stream#forEach(Consumer)",
"java.util.ArrayList#get(int)",
"java.util.Set#iterator()",
"java.util.stream.Collectors#toSet()",
"java.lang.String#replaceAll(String,String)",
"java.lang.String#getBytes(Charset)",
"java.util.Objects#requireNonNull(Object)",
"java.util.Objects#nonNull(Object)",
"java.lang.String#endsWith(String)",
"java.lang.AbstractStringBuilder#length()",
"java.sql.PreparedStatement#setString(int,String)",
"java.util.regex.Pattern#matcher(CharSequence)",
"java.nio.file.Path#toString()",
"java.time.Instant#now()",
"java.io.File#getAbsolutePath()",
"java.util.Set#addAll(Collection)",
"java.lang.Integer#valueOf(int)",
"java.util.HashSet#HashSet(Collection)",
"java.lang.Integer#toString(int)",
"java.lang.StringBuilder#StringBuilder(String)",
"java.lang.Thread#sleep(long)",
"java.lang.Thread#currentThread()",
"java.util.Date#getTime()",
"java.io.Writer#write(String)",
"java.lang.String#getBytes()",
"java.io.File#exists()",
"java.lang.String#toUpperCase()",
"java.lang.Long#parseLong(String)",
"java.util.Collections#emptyMap()",
"java.util.Optional#orElseThrow(Supplier)",
"java.util.List#of(Object,Object)",
"java.util.concurrent.CountDownLatch#countDown()",
"java.lang.Class#isAssignableFrom(Class)",
"java.lang.IndexOutOfBoundsException#IndexOutOfBoundsException(String)",
"java.lang.Throwable#getCause()",
"java.util.Arrays#stream(Object[])",
"java.util.function.Supplier#get()",
"java.lang.Exception#Exception(String)",
"java.util.function.Consumer#accept(Object)",
"java.util.stream.Stream#anyMatch(Predicate)",
"java.util.List#clear()",
"java.io.File#File(File,String)",
"java.lang.String#indexOf(String)",
"java.util.List#iterator()",
"java.util.concurrent.CountDownLatch#CountDownLatch(int)",
"java.sql.ResultSet#next()",
"java.sql.PreparedStatement#setInt(int,int)",
"java.util.concurrent.atomic.AtomicInteger#get()",
"java.util.stream.Collectors#toMap(Function,Function)",
"java.lang.Math#min(int,int)",
"java.lang.Long#equals(Object)",
"java.util.Properties#setProperty(String,String)",
"java.util.Map#getOrDefault(Object,Object)",
"java.lang.System#getProperty(String)",
"java.util.stream.Stream#of(Object[])",
"java.nio.file.Paths#get(String,String[])",
"java.math.BigDecimal#compareTo(BigDecimal)",
"java.math.BigDecimal#valueOf(long)",
"java.lang.RuntimeException#RuntimeException(String,Throwable)",
"java.util.Collection#add(Object)",
"java.util.Collections#emptySet()",
"java.util.stream.Stream#flatMap(Function)",
"java.util.concurrent.atomic.AtomicReference#get()",
"java.util.Collection#isEmpty()",
"java.lang.StringBuffer#toString()",
"java.util.Collections#singleton(Object)",
"java.io.File#getName()",
"java.time.ZonedDateTime#now()",
"java.io.ByteArrayInputStream#ByteArrayInputStream(byte[])",
"java.nio.file.Path#toFile()",
"java.util.Date#Date(long)",
"java.lang.System#nanoTime()",
"java.util.Hashtable#put(Object,Object)",
"java.util.Map#putAll(Map)",
"java.lang.Long#toString()",
"java.util.List#toArray(Object[])",
"java.io.File#toPath()",
"java.util.regex.Matcher#group(int)",
"java.time.LocalDate#of(int,int,int)",
"java.lang.String#valueOf(long)",
"java.math.BigDecimal#valueOf(double)",
"java.io.IOException#IOException(String)",
"java.text.DateFormat#format(Date)",
"java.sql.ResultSet#getInt(String)",
"java.util.Map#clear()",
"java.util.HashSet#add(Object)",
"java.lang.Class#getClassLoader()",
"java.lang.Boolean#equals(Object)",
"java.lang.String#concat(String)",
"java.util.Collections#singletonMap(Object,Object)",
"java.util.Collection#iterator()",
"java.util.Map#computeIfAbsent(Object,Function)",
"java.text.SimpleDateFormat#SimpleDateFormat(String)",
"java.util.StringJoiner#add(CharSequence)",
"java.lang.Long#longValue()",
"java.util.stream.Collectors#joining(CharSequence)",
// top 300
"java.lang.Math#max(int,int)",
"java.util.Map#of(Object,Object)",
"java.lang.Long#valueOf(long)",
"java.util.Random#nextInt(int)",
"java.lang.Long#valueOf(String)",
"java.util.concurrent.CountDownLatch#await(long,TimeUnit)",
"java.util.Properties#getProperty(String)",
"java.util.Optional#isEmpty()",
"java.util.concurrent.CompletableFuture#get()",
"java.util.Objects#isNull(Object)",
"java.lang.StringBuilder#append(long)",
"java.awt.Container#add(Component,Object)",
"java.math.BigDecimal#add(BigDecimal)",
"java.sql.PreparedStatement#executeQuery()",
"java.lang.StringBuilder#StringBuilder(int)",
"java.util.Map#forEach(BiConsumer)",
"java.math.BigDecimal#BigDecimal(int)",
"java.util.Collections#unmodifiableList(List)",
"java.util.Properties#put(Object,Object)",
"java.sql.Timestamp#Timestamp(long)",
"java.util.List#equals(Object)",
"java.lang.String#indexOf(int)",
"java.lang.Long#toString(long)",
"java.lang.Integer#Integer(int)",
"java.util.concurrent.atomic.AtomicBoolean#get()",
"java.lang.System#setProperty(String,String)",
"java.util.concurrent.Future#get()",
"java.lang.Thread#start()",
"java.util.Set#of(Object)",
"java.util.Calendar#set(int,int)",
"java.time.Duration#ofSeconds(long)",
"java.lang.System#arraycopy(Object,int,Object,int,int)",
"java.net.URI#toString()",
"java.util.concurrent.atomic.AtomicInteger#incrementAndGet()",
"java.util.Set#remove(Object)",
"java.lang.Boolean#parseBoolean(String)",
"java.util.Calendar#getTime()",
"java.nio.charset.Charset#name()",
"java.lang.ThreadLocal#get()",
"java.lang.Class#getCanonicalName()",
"java.util.List#remove(Object)",
"java.lang.Throwable#toString()",
"java.util.stream.Stream#toList()",
"java.io.ByteArrayOutputStream#toByteArray()",
"java.util.concurrent.atomic.AtomicLong#get()",
"java.lang.NullPointerException#NullPointerException(String)",
"java.util.List#of()",
"java.util.Calendar#getInstance()",
"java.util.Calendar#get(int)",
"java.util.Optional#orElseThrow()",
"java.lang.System#lineSeparator()",
"java.lang.Boolean#booleanValue()",
"java.util.logging.Logger#isLoggable(Level)",
"java.lang.Enum#hashCode()",
"java.util.List#hashCode()",
"java.lang.reflect.Method#invoke(Object,Object[])",
"java.lang.String#String(byte[],Charset)",
"java.util.Comparator#comparing(Function)",
"java.util.Arrays#toString(Object[])",
"java.time.LocalDate#now()",
"java.util.function.Function#identity()",
"java.io.OutputStream#write(byte[])",
"java.lang.Integer#equals(Object)",
"java.io.BufferedReader#BufferedReader(Reader)",
"java.io.DataInput#readInt()",
"java.io.BufferedReader#readLine()",
"java.util.Map#entry(Object,Object)",
"java.lang.Runnable#run()",
"java.util.ResourceBundle#getString(String)",
"java.util.Iterator#remove()",
"java.lang.String#join(CharSequence,Iterable)",
"java.util.concurrent.atomic.AtomicBoolean#set(boolean)",
"java.time.LocalDateTime#now()",
"java.sql.ResultSet#getLong(String)",
"java.text.DateFormat#parse(String)",
"java.lang.String#toString()",
"java.lang.Integer#valueOf(String)",
"java.util.regex.Matcher#find()",
"java.io.DataOutput#writeInt(int)",
"java.util.HashMap#HashMap(int)",
"java.util.stream.Stream#sorted(Comparator)",
"java.lang.String#toCharArray()",
"java.util.concurrent.atomic.AtomicInteger#AtomicInteger(int)",
"java.lang.String#String(byte[])",
"java.lang.reflect.Method#getName()",
"java.sql.ResultSet#getString(int)",
"java.net.URI#create(String)",
"java.lang.Enum#ordinal()",
"java.util.concurrent.atomic.AtomicReference#set(Object)",
"java.util.concurrent.CompletableFuture#join()",
"java.io.FileInputStream#FileInputStream(File)",
"java.io.File#delete()",
"java.util.concurrent.TimeUnit#toMillis(long)",
"java.util.List#of(Object,Object,Object)",
"java.lang.String#compareTo(String)",
"java.util.stream.IntStream#range(int,int)",
"java.math.BigInteger#valueOf(long)",
"java.util.List#remove(int)",
"java.util.HashMap#HashMap(Map)",
"java.util.function.BiConsumer#accept(Object,Object)",
// top 400
"java.util.HashMap#containsKey(Object)",
"java.util.Collection#contains(Object)",
"java.lang.Double#parseDouble(String)",
"java.lang.Thread#interrupt()",
"java.awt.Container#add(Component)",
"java.time.chrono.ChronoZonedDateTime#toInstant()",
"java.util.List#subList(int,int)",
"java.util.concurrent.ConcurrentHashMap#get(Object)",
"java.lang.System#getenv(String)",
"java.time.Duration#ofMillis(long)",
"java.lang.Integer#toString()",
"java.lang.reflect.Constructor#newInstance(Object[])",
"java.util.Hashtable#get(Object)",
"java.lang.Class#toString()",
"java.util.Vector#add(Object)",
"java.io.StringReader#StringReader(String)",
"java.io.File#getPath()",
"java.lang.System#identityHashCode(Object)",
"java.util.stream.Stream#count()",
"java.util.concurrent.CompletableFuture#complete(Object)",
"java.nio.file.Files#exists(Path,LinkOption[])",
"java.util.List#set(int,Object)",
"java.util.concurrent.atomic.AtomicLong#AtomicLong(long)",
"java.util.Optional#orElseGet(Supplier)",
"java.lang.Class#forName(String)",
"java.lang.String#replace(char,char)",
"java.util.Enumeration#nextElement()",
"java.lang.Class#getMethod(String,Class[])",
"java.nio.file.Path#toAbsolutePath()",
"java.util.Enumeration#hasMoreElements()",
"java.lang.Class#cast(Object)",
"java.util.concurrent.atomic.AtomicBoolean#AtomicBoolean(boolean)",
"java.math.BigDecimal#doubleValue()",
"java.util.UUID#fromString(String)",
"java.lang.System#exit(int)",
"java.util.List#add(int,Object)",
"java.lang.Boolean#valueOf(boolean)",
"java.sql.Timestamp#getTime()",
"java.nio.Buffer#remaining()",
"java.net.URL#URL(String)",
"java.net.URI#URI(String)",
"java.util.Objects#hashCode(Object)",
"java.util.Set#clear()",
"java.io.File#isDirectory()",
"java.time.Duration#toMillis()",
"java.nio.ByteBuffer#allocate(int)",
"java.math.BigDecimal#toString()",
"java.lang.Class#getResourceAsStream(String)",
"java.util.logging.Logger#getLogger(String)",
"java.lang.String#toLowerCase(Locale)",
"java.util.concurrent.CompletableFuture#completeExceptionally(Throwable)",
"java.util.stream.Stream#findAny()",
"java.util.concurrent.CompletableFuture#completedFuture(Object)",
"java.util.stream.Stream#of(Object)",
"java.util.Map#of(Object,Object,Object,Object)",
"java.util.Collections#sort(List,Comparator)",
"java.lang.Thread#Thread(Runnable)",
"java.lang.String#lastIndexOf(int)",
"java.io.UncheckedIOException#UncheckedIOException(IOException)",
"java.util.LinkedHashSet#LinkedHashSet(Collection)",
"java.sql.PreparedStatement#executeUpdate()",
"java.time.ZoneId#of(String)",
"java.util.concurrent.atomic.AtomicLong#addAndGet(long)",
"java.nio.ByteBuffer#wrap(byte[])",
"java.util.List#indexOf(Object)",
"java.util.Collections#unmodifiableMap(Map)",
"java.lang.Long#Long(long)",
"java.util.StringTokenizer#nextToken()",
"java.lang.String#join(CharSequence,CharSequence[])",
"java.io.StringWriter#toString()",
"java.lang.Integer#toHexString(int)",
"java.lang.Long#intValue()",
"java.text.MessageFormat#format(String,Object[])",
"java.lang.Exception#Exception(String,Throwable)",
"java.util.stream.Stream#toArray(IntFunction)",
"java.util.List#sort(Comparator)",
"java.util.LinkedHashMap#get(Object)",
"java.sql.PreparedStatement#setLong(int,long)",
"java.lang.Iterable#iterator()",
"java.math.BigInteger#or(BigInteger)",
"java.time.LocalDateTime#of(int,int,int,int,int,int)",
"java.time.Instant#toEpochMilli()",
"java.math.BigDecimal#setScale(int,RoundingMode)",
"java.lang.Class#isInstance(Object)",
"java.util.regex.Pattern#compile(String)",
"java.util.Calendar#getTimeInMillis()",
"java.lang.Class#getResource(String)",
"java.util.concurrent.Executor#execute(Runnable)",
"java.util.concurrent.locks.Lock#unlock()",
"java.lang.AssertionError#AssertionError(Object)",
"java.util.ArrayList#addAll(Collection)",
"java.io.File#mkdirs()",
"java.time.Duration#ofMinutes(long)",
"java.time.format.DateTimeFormatter#ofPattern(String)",
"java.lang.Throwable#getLocalizedMessage()",
"java.lang.StringBuilder#delete(int,int)",
"java.util.Vector#size()",
"java.lang.String#String(String)",
"java.util.ArrayList#isEmpty()",
"java.util.Collection#removeIf(Predicate)",
// top 500
"java.util.HashSet#HashSet(int)",
"java.util.Set#of(Object,Object)",
"java.util.Collections#unmodifiableSet(Set)",
"java.sql.Connection#createStatement()",
"java.math.BigDecimal#subtract(BigDecimal)",
"java.util.Date#from(Instant)",
"java.lang.StringBuffer#append(char)",
"java.util.Locale#forLanguageTag(String)",
"java.io.DataInput#readLong()",
"java.util.Collections#sort(List)",
"java.io.DataOutput#writeLong(long)",
"java.util.function.BiFunction#apply(Object,Object)",
"java.lang.String#lastIndexOf(String)",
"java.util.Optional#filter(Predicate)",
"java.lang.StringBuilder#append(ObjectString)",
"java.lang.StringBuffer#append(Object)",
"java.io.File#getParentFile()",
"java.util.stream.Stream#allMatch(Predicate)",
"java.sql.ResultSet#getTimestamp(String)",
"java.util.Calendar#setTime(Date)",
"java.util.concurrent.CompletionStage#toCompletableFuture()",
"java.util.concurrent.locks.Lock#lock()",
"java.lang.reflect.Field#get(Object)",
"java.io.InputStream#close()",
"java.math.BigInteger#BigInteger(String)",
"java.lang.Class#getDeclaredField(String)",
"java.io.InputStreamReader#InputStreamReader(InputStream)",
"java.lang.Runtime#getRuntime()",
"java.lang.Class#getDeclaredConstructor(Class[])",
"java.lang.AbstractStringBuilder#setLength(int)",
"java.nio.Buffer#position()",
"java.nio.file.Path#getFileName()",
"java.util.List#toArray()",
"java.lang.CharSequence#length()",
"java.util.stream.Stream#distinct()",
"java.lang.String#format(ObjectString,Object[])",
"java.net.URL#toURI()",
"java.util.Queue#poll()",
"java.lang.Thread#getContextClassLoader()",
"java.lang.String#valueOf(boolean)",
"java.util.Calendar#add(int,int)",
"java.util.HashMap#entrySet()",
"java.util.stream.IntStream#mapToObj(IntFunction)",
"java.util.concurrent.atomic.AtomicLong#incrementAndGet()",
"java.util.concurrent.ExecutorService#shutdown()",
"java.util.concurrent.ExecutorService#submit(Runnable)",
"java.math.BigDecimal#intValue()",
"java.math.BigDecimal#toBigInteger()",
"java.util.LinkedList#add(Object)",
"java.lang.AbstractStringBuilder#charAt(int)",
"java.lang.Thread#getName()",
"java.lang.Math#max(long,long)",
"java.util.HashMap#size()",
"java.time.LocalDate#plusDays(long)",
"java.nio.ByteBuffer#array()",
"java.lang.StringBuilder#append(CharSequence)",
"java.util.Vector#addElement(Object)",
"java.lang.ClassLoader#getResource(String)",
"java.awt.Insets#Insets(int,int,int,int)",
"java.util.TimeZone#getTimeZone(String)",
"java.time.ZoneId#systemDefault()",
"java.lang.Number#doubleValue()",
"java.util.stream.Stream#reduce(Object,BinaryOperator)",
"java.lang.CharSequence#toString()",
"java.time.Instant#parse(CharSequence)",
"java.text.Format#format(Object)",
"java.io.File#toURI()",
"java.sql.ResultSet#getInt(int)",
"java.lang.Number#longValue()",
"java.lang.Double#doubleToLongBits(double)",
"java.lang.Math#min(long,long)",
"java.lang.Double#valueOf(double)",
"java.lang.invoke.MethodHandles#lookup()",
"java.util.concurrent.CompletableFuture#isDone()",
"java.time.LocalDate#parse(CharSequence)",
"java.lang.StringBuilder#append(boolean)",
"java.util.concurrent.CountDownLatch#await()",
"java.util.concurrent.ConcurrentHashMap#put(Object,Object)",
"java.util.stream.Stream#mapToInt(ToIntFunction)",
"java.math.BigDecimal#multiply(BigDecimal)",
"java.util.stream.Stream#concat(Stream,Stream)",
"java.time.Instant#ofEpochMilli(long)",
"java.nio.file.Path#getParent()",
"java.util.stream.Stream#sorted()",
"java.util.concurrent.atomic.AtomicBoolean#compareAndSet(boolean,boolean)",
"java.util.UUID#equals(Object)",
"java.io.OutputStream#flush()",
"java.time.format.DateTimeFormatter#format(TemporalAccessor)",
"java.io.Closeable#close()",
"java.util.EventObject#getSource()",
"java.io.File#File(String,String)",
"java.lang.Number#intValue()",
"java.io.File#length()",
"java.lang.AbstractStringBuilder#setCharAt(int,char)",
"java.util.Set#removeAll(Collection)",
"java.io.File#listFiles()",
"java.lang.ClassLoader#getResourceAsStream(String)",
"java.util.Date#toInstant()",
"java.util.Queue#add(Object)",
"java.io.File#isFile()"
